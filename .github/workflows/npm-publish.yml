name: Publish NPM Package

on:
   push:
      branches:
         - main
      paths:
         - "package.json"

jobs:
   publish:
      name: Publish NPM Package
      runs-on: ubuntu-latest
      permissions:
         contents: write
         id-token: write
      steps:
         - name: Checkout repository
           uses: actions/checkout@v4
           with:
              fetch-depth: 0

         - name: Setup Node.js
           uses: actions/setup-node@v4
           with:
              node-version: "20.x"
              registry-url: "https://registry.npmjs.org"

         - name: Check version changes
           id: check
           run: |
              CURRENT_VERSION=$(jq -r .version package.json)
              LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
              echo "Latest tag: $LATEST_TAG"
              LATEST_VERSION=${LATEST_TAG#v}

              echo "Current version: $CURRENT_VERSION"
              echo "Latest tag version: $LATEST_VERSION"

              if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
                echo "version_changed=true" >> $GITHUB_OUTPUT
                echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
                echo "Version changed from $LATEST_VERSION to $CURRENT_VERSION"
              else
                echo "version_changed=false" >> $GITHUB_OUTPUT
                echo "Version unchanged"
              fi

         - name: Install dependencies
           if: steps.check.outputs.version_changed == 'true'
           run: npm ci

         - name: Build package
           if: steps.check.outputs.version_changed == 'true'
           run: npm run build

         - name: Publish to NPM
           if: steps.check.outputs.version_changed == 'true'
           run: npm publish

         - name: Create and push git tag
           if: steps.check.outputs.version_changed == 'true'
           run: |
              git config --local user.email "github-actions[bot]@users.noreply.github.com"
              git config --local user.name "github-actions[bot]"
              git tag -a "v${{ steps.check.outputs.new_version }}" -m "Release v${{ steps.check.outputs.new_version }}"
              git push origin "v${{ steps.check.outputs.new_version }}"
